<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="grvSalida.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>